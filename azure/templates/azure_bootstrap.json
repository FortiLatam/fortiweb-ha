{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "location"
      }
    },
    "vmNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Name prefix for FortiWeb set VM instances."
      }
    },
    "vmSku": {
      "type": "string",
      "defaultValue": "Standard_F2s",
      "metadata": {
        "description": "Size of VM in the FortiWeb set VM instances."
      }
    },
    "adminUserName": {
      "type": "string",
      "metadata": {
        "description": "Admin username for the FortiWeb instance."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password"
      }
    },
    "VMPubIPNewOrExisting": {
      "defaultValue": "new",
      "type": "string",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Identify whether to use a public IP and if so whether it is new or previously created"
      }
    },
    "VMPubIPName": {
      "defaultValue": "VM1PubIP",
      "type": "string",
      "metadata": {
        "description": "Public IP address name for the VM"
      }
    },
    "VMPubIPType": {
      "type": "string",
      "defaultValue": "Static",
      "allowedValues": [
        "Dynamic",
        "Static"
      ],
      "metadata": {
        "description": "Type of public IP address - A 'dynamic' address will change during reboot or periods of inactivity"
      }
    },
    "VMPubIPSku": {
      "defaultValue": "Basic",
      "type": "string",
      "allowedValues": [
        "Basic",
        "Standard"
      ],
      "metadata": {
        "description": "The public IP address SKU"
      }
    },
    "VMPubIPRG": {
      "defaultValue": "[resourceGroup().name]",
      "type": "string",
      "metadata": {
        "description": "Resource Group containing the public IP - or new resource group from above (if new public IP)"
      }
    },
    "vnetNewOrExisting": {
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "type": "string",
      "metadata": {
        "description": "Identify whether to use a new or existing vnet."
      }
    },
    "virtualNetResourceGroup": {
      "defaultValue": "[resourceGroup().name]",
      "type": "string",
      "metadata": {
        "description": "Resource group name of the existing virtual network, only valid when the 'vnet New Or Existing' value is 'existing'."
      }
    },
    "virtualNetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Azure virtual network."
      }
    },
    "vnetAddressPrefix": {
      "defaultValue": "10.0.0.0/16",
      "type": "string",
      "metadata": {
        "description": "Virtual Network Address prefix"
      }
    },
    "Subnet1Name": {
      "defaultValue": "sub1",
      "type": "string",
      "metadata": {
        "description": "Subnet Name"
      }
    },
    "Subnet1Prefix": {
      "defaultValue": "10.0.1.0/24",
      "type": "string",
      "metadata": {
        "description": "Outside Subnet Prefix"
      }
    },
    "Subnet2Name": {
      "defaultValue": "sub2",
      "type": "string",
      "metadata": {
        "description": "Subnet Name"
      }
    },
    "Subnet2Prefix": {
      "defaultValue": "10.0.2.0/24",
      "type": "string",
      "metadata": {
        "description": "Inside Subnet Prefix"
      }
    },
    "usrCLI": {
      "type": "string",
      "defaultValue": "config system global\n set timezone 02\n end"
    },
    "flxexVm": {
      "type": "string",
      "defaultValue": ""
    },
    "usrCLIUri": {
      "type": "string",
      "defaultValue": "https://fwbsctesthdhsc.blob.core.windows.net/cloudinitdtest/usr-cli-file.txt?st=2019-08-21T06%3A48%3A00Z&se=2019-08-23T06%3A48%3A29Z&sp=rl&sv=2018-03-28&sr=b&sig=KyqXzuKrw36eqflsAKXuWX9QZh0SCT%2BkayGsAe4mo9I%3D"
    },
    "usrLicenseUri": {
      "type": "string",
      "defaultValue": "https://fwbsctesthdhsc.blob.core.windows.net/cloudinitdtest/license86927.lic?st=2019-08-21T06%3A48%3A00Z&se=2019-08-23T06%3A48%3A59Z&sp=rl&sv=2018-03-28&sr=b&sig=ViMx7PFAsVo44wUX3x5OklBATbVefGHThpzSfkBwmVs%3D"
    }
  },
  "variables": {
    "vmName": "[concat(parameters('vmNamePrefix'), '-VM')]",
    "subnet1ID": "[resourceId(parameters('virtualNetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetName'), parameters('Subnet1Name'))]",
    "subnet2ID": "[resourceId(parameters('virtualNetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetName'), parameters('Subnet2Name'))]",
    "cloudInitd": "\"cloud-initd\": \"enable\"",
	"usrCLI": "[concat(',\"usr-cli\": \"', parameters('usrCLI'), '\"')]",
    "usrCLIUri": "[concat(',\"usr-cli-uri\": \"', parameters('usrCLIUri'), '\"')]",
    "usrLicenseUri": "[concat(',\"usr-license-uri\": \"', parameters('usrLicenseUri'), '\"')]",
    "flxexVm": "[concat(',\"flex_token\": \"', parameters('flxexVm'), '\"')]",
    "customData": "[concat('{', variables('cloudInitd'), variables('usrCLI'), variables('usrCLIUri'), variables('usrLicenseUri'), '}')]"
  },
  "resources": [
    {
      "apiVersion": "2018-02-01",
      "name": "pid-474c178d-91e9-5cc6-a600-e96d624f7984",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deplymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "condition": "[equals(parameters('VMPubIPNewOrExisting'), 'new')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('VMPubIPName')]",
      "apiVersion": "2018-08-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('VMPubIPSku')]"
      },
      "properties": {
        "publicIPAllocationMethod": "[parameters('VMPubIPType')]"
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "myNic1",
      "apiVersion": "2018-08-01",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet1ID')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4",
              "publicIPAddress": {
                "id": "[resourceId(parameters('VMPubIPRG'), 'Microsoft.Network/publicIPAddresses', parameters('VMPubIPName'))]"
              }
            }
          }
        ],
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetName'))]",
        "[parameters('VMPubIPName')]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "myNic2",
      "apiVersion": "2018-08-01",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "privateIPAddressVersion": "IPv4",
              "subnet": {
                "id": "[variables('subnet2ID')]"
              }
            }
          }
        ],
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "apiVersion": "2018-06-01",
      "location": "[parameters('location')]",
      "plan": {
        "name": "fortinet_fw-vm",
        "product": "fortinet_fortiweb-vm_v5",
        "publisher": "fortinet"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSku')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "fortinet",
            "offer": "fortinet_fortiweb-vm_v5",
            "sku": "fortinet_fw-vm",
            "version": "7.0.3"
          },
          "osDisk": {
            "osType": "Linux",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": 30,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]",
          "customData": "[base64(variables('customData'))]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'myNic1')]",
              "properties": {
                "primary": true
              }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'myNic2')]",
              "properties": {
                "primary": false
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', 'myNic1')]",
        "[resourceId('Microsoft.Network/networkInterfaces', 'myNic2')]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "mySecurityGroup",
      "apiVersion": "2018-08-01",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "allowManageHttp",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8080",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1001,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "allowManageHttps",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1011,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "allowSSH",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1021,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "allowHttp",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1031,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "allowHttps",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1041,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ],
        "defaultSecurityRules": [
          {
            "name": "AllowVnetInBound",
            "properties": {
              "description": "Allow inbound traffic from all VMs in VNET",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 65000,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowAzureLoadBalancerInBound",
            "properties": {
              "description": "Allow inbound traffic from azure load balancer",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "AzureLoadBalancer",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 65001,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "DenyAllInBound",
            "properties": {
              "description": "Deny all inbound traffic",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 65500,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowVnetOutBound",
            "properties": {
              "description": "Allow outbound traffic from all VMs to all VMs in VNET",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 65000,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowInternetOutBound",
            "properties": {
              "description": "Allow outbound traffic from all VMs to Internet",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "Internet",
              "access": "Allow",
              "priority": 65001,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "DenyAllOutBound",
            "properties": {
              "description": "Deny all outbound traffic",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 65500,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetName')]",
      "apiVersion": "2018-08-01",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('Subnet1Name')]",
            "properties": {
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'mySecurityGroup')]"
              },
              "addressPrefix": "[parameters('Subnet1Prefix')]"
            }
          },
          {
            "name": "[parameters('Subnet2Name')]",
            "properties": {
              "addressPrefix": "[parameters('Subnet2Prefix')]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'mySecurityGroup')]"
      ],
      "condition": "[equals(parameters('vnetNewOrExisting'), 'new')]"
    }
  ]
}
